<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2015 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.

--><!--
 All hybris buildcallbacks.xml macrodefinitions:

 Build/Documentation

	 before/after ant macro "clean"
		 <macrodef name="pizzahutcockpits_before_clean"/>
		 <macrodef name="pizzahutcockpits_after_clean"/>

	 before/after ant macro "build"
		 <macrodef name="pizzahutcockpits_before_build"/>
		 <macrodef name="pizzahutcockpits_after_build"/>

	 before/after ant macro "compile_core" - the core module of the extension
		 <macrodef name="pizzahutcockpits_before_compile_core">
		 <macrodef name="pizzahutcockpits_after_compile_core">

	 before/after ant macro "compile_web" - the web module of the extension
		 <macrodef name="pizzahutcockpits_before_compile_web" />
		 <macrodef name="pizzahutcockpits_after_compile_web" />

	 before/after ant macro "compile_hmc" - the hmc module of the extension
		 <macrodef name="pizzahutcockpits_before_compile_hmc" />
		 <macrodef name="pizzahutcockpits_after_compile_hmc" />

 Preparing extension

	 will be called in the beginning of the ant call and only once (also when using multiple 
	 ant targets e.g. ant build yunittest)
		 <macrodef name="pizzahutcockpits_only_once_prepare"/>

 Creating ear module/production

	 before/after ant macro "ear"
		 <macrodef name="pizzahutcockpits_before_ear"/>
		 <macrodef name="pizzahutcockpits_after_ear"/>

	 before/after ant macro "production" - for hybris server only
		 <macrodef name="pizzahutcockpits_before_production" />
		 <macrodef name="pizzahutcockpits_after_production" />

 JUnit Test

	 before/after ant macro "yunitinit" 
		 <macrodef name="pizzahutcockpits_before_yunitinit" />
		 <macrodef name="pizzahutcockpits_after_yunitinit" />

	 before/after ant macro "yunit"
		 <macrodef name="pizzahutcockpits_before_yunit" />
		 <macrodef name="pizzahutcockpits_after_yunit" /> 

 Distribution package

 	 before/after ant macro "dist" - internal target; only for use when platform is available in source code
		 <macrodef name="pizzahutcockpits_after_dist"/>
		 <macrodef name="pizzahutcockpits_before_dist"/>
	 
	 before/after ant macro "dist_copy" - internal target; only for use when platform is available in source code
		 <macrodef name="pizzahutcockpits_before_dist_copy"/>
		 <macrodef name="pizzahutcockpits_after_dist_copy"/>

--><project name="pizzahutcockpits_buildcallbacks">

	<!-- 
		Called whenever 'ant ear' is used. this callback can be used to modify the content of the ear file

		${ear.path}: 			path to ear
	-->
	<macrodef name="pizzahutcockpits_before_ear">
		<sequential>

			<!-- you can do anything before the EAR file is being packed -->

		</sequential>
	</macrodef>
	<macrodef name="pizzahutcockpits_after_build">
		<sequential>

			<if>
				<isset property="ext.cmscockpit.path"/>
				<then>
					<echo level="info" message="pizzahutcockpits - Copying custom wizard to cmscockpit..."/>
					 <copy todir="${ext.cmscockpit.path}/web/webroot">
						<fileset dir="${ext.pizzahutcockpits.path}/resources/pizzahutcockpits/cmscockpit/zul">
							<include name="**/**.*"/>
						</fileset>
					</copy>
					<copy todir="${ext.cmscockpit.path}/web/webroot/cmscockpit/images">
						<fileset dir="${ext.pizzahutcockpits.path}/resources/pizzahutcockpits/cmscockpit/images">
							<include name="**/**.*"/>
						</fileset>
					</copy>
				</then>
			</if>

			<if>
				<isset property="ext.btgcockpit.path"/>
				<then>
					<echo level="info" message="pizzahutcockpits - Copying custom wizard to btgcockpit..."/>
					<copy todir="${ext.btgcockpit.path}/web/webroot">
						<fileset dir="${ext.pizzahutcockpits.path}/resources/pizzahutcockpits/cmscockpit/zul">
							<include name="**/**.*"/>
						</fileset>
					</copy>
					<copy todir="${ext.btgcockpit.path}/web/webroot/cmscockpit/images">
						<fileset dir="${ext.pizzahutcockpits.path}/resources/pizzahutcockpits/cmscockpit/images">
							<include name="**/**.*"/>
						</fileset>
					</copy>
				</then>
			</if>

			<impexGenerate extname="pizzahutcockpits"/>

		</sequential>
	</macrodef>

	<macrodef name="pizzahutcockpits_before_build">
		<sequential>
			<pizzahutcockpits_delete_web_dir/>
		</sequential>
	</macrodef>

	<macrodef name="pizzahutcockpits_after_clean">
		<sequential>
			<pizzahutcockpits_delete_web_dir/>
			<delete failonerror="false" file="${ext.pizzahutcockpits.path}/resources-lang/touch_impexgen"/>
		</sequential>
	</macrodef>


	<macrodef name="pizzahutcockpits_delete_web_dir">
		<sequential>
			<!-- This is required until PLA-10893 is fixed -->
			<echo level="info" message="Removing web directory for extension pizzahutcockpits"/>
			<delete dir="${ext.pizzahutcockpits.path}/web" quiet="true"/>
		</sequential>
	</macrodef>

</project>
